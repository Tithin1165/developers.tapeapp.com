"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[42],{4757:(e,a,t)=>{t.d(a,{Z:()=>n});var r=t(7294);function n(e){var a,t=e.method,n=e.url;switch(t){case"GET":a="#007959";break;case"POST":a="#0071BB";break;case"PUT":a="#DEA700";break;case"DELETE":a="#DF245E"}return r.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},r.createElement("span",{style:{backgroundColor:a,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},t.toUpperCase()),r.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},n))}},8215:(e,a,t)=>{t.d(a,{Z:()=>n});var r=t(7294);function n(e){var a=e.children,t=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:n},a)}},9877:(e,a,t)=>{t.d(a,{Z:()=>s});var r=t(7462),n=t(7294),l=t(2389),i=t(3725),o=t(6010);const u="tabItem_LplD";function d(e){var a,t,l,d=e.lazy,s=e.block,p=e.defaultValue,c=e.values,m=e.groupId,v=e.className,f=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=c?c:f.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),k=(0,i.lx)(b,(function(e,a){return e.value===a.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===p?p:null!=(a=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(l=f[0])?void 0:l.props.value;if(null!==h&&!b.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,i.UB)(),g=y.tabGroupChoices,T=y.setTabGroupChoices,x=(0,n.useState)(h),E=x[0],N=x[1],_=[],R=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=g[m];null!=C&&C!==E&&b.some((function(e){return e.value===C}))&&N(C)}var S=function(e){var a=e.currentTarget,t=_.indexOf(a),r=b[t].value;r!==E&&(R(a),N(r),null!=m&&T(m,r))},Z=function(e){var a,t=null;switch(e.key){case"ArrowRight":var r=_.indexOf(e.currentTarget)+1;t=_[r]||_[0];break;case"ArrowLeft":var n=_.indexOf(e.currentTarget)-1;t=_[n]||_[_.length-1]}null==(a=t)||a.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":s},v)},b.map((function(e){var a=e.value,t=e.label,l=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===a?0:-1,"aria-selected":E===a,key:a,ref:function(e){return _.push(e)},onKeyDown:Z,onFocus:S,onClick:S},l,{className:(0,o.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":E===a})}),null!=t?t:a)}))),d?(0,n.cloneElement)(f.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},f.map((function(e,a){return(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==E})}))))}function s(e){var a=(0,l.Z)();return n.createElement(d,(0,r.Z)({key:String(a)},e))}},642:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>v,contentTitle:()=>c,default:()=>k,frontMatter:()=>p,metadata:()=>m,toc:()=>f});var r=t(7462),n=t(3366),l=(t(7294),t(3905)),i=t(4757),o=t(9877),u=t(8215),d=t(7859),s=["components"],p={id:"number",title:"Number Field Value",sidebar_label:"Number"},c=void 0,m={unversionedId:"api/resource/field-value/number",id:"api/resource/field-value/number",title:"Number Field Value",description:"A number field value consists of its value property of type number. The value is a decimal like 1, 1.0 or 1.5. A number field value holds at most one value.",source:"@site/docs/api/resource/field-value/number.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/number",permalink:"/docs/api/resource/field-value/number",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/number.md",tags:[],version:"current",frontMatter:{id:"number",title:"Number Field Value",sidebar_label:"Number"},sidebar:"mainSidebar",previous:{title:"Checklist",permalink:"/docs/api/resource/field-value/checklist"},next:{title:"Link",permalink:"/docs/api/resource/field-value/link"}},v={},f=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],b={toc:f};function k(e){var a=e.components,t=(0,n.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A number field value consists of its ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," property of type ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),". The value is a decimal like 1, 1.0 or 1.5. A ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," field value holds at most one value."),(0,l.kt)("h2",{id:"record-creation"},"Record creation"),(0,l.kt)(i.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'A number field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "Salary" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"number")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"salary"),":"),(0,l.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "salary": 2000\n    }\n  }\' \n')),(0,l.kt)(u.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "salary": 2000\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "2000$",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "salary",\n      "type": "number",\n      "field_type": "number",\n      "label": "Salary",\n      "values": [{ "value": 2000 }]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,l.kt)(i.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"A number field value can be retrieved as part of a record retrieval:"),(0,l.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "2000$",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "salary",\n      "type": "number",\n      "field_type": "number",\n      "label": "Salary",\n      "values": [{ "value": 2000 }]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-update"},"Record update"),(0,l.kt)(i.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'One or more number field values can be updated as part of a record update. Here is an example request body for updating a record with a value for the "Salary" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"number")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"salary"),":"),(0,l.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(u.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "salary": 4000\n    }\n  }\' \n')),(0,l.kt)(u.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "salary": 4000\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "4000$",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "salary",\n      "type": "number",\n      "field_type": "number",\n      "label": "Salary",\n      "values": [{ "value": 4000 }]\n    }\n  ]\n}\n')))}k.isMDXComponent=!0}}]);