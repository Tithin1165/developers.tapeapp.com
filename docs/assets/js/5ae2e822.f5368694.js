"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[402],{4757:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294);function l(e){var t,a=e.method,l=e.url;switch(a){case"GET":t="#007959";break;case"POST":t="#0071BB";break;case"PUT":t="#DEA700";break;case"DELETE":t="#DF245E"}return n.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},n.createElement("span",{style:{backgroundColor:t,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},a.toUpperCase()),n.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},l))}},8215:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294);function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:l},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(7462),l=a(7294),r=a(2389),i=a(3725),o=a(6010);const s="tabItem_LplD";function d(e){var t,a,r,d=e.lazy,u=e.block,p=e.defaultValue,c=e.values,m=e.groupId,f=e.className,v=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),x=null!=c?c:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,i.lx)(x,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===p?p:null!=(t=null!=p?p:null==(a=v.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==h&&!x.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+x.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,i.UB)(),k=g.tabGroupChoices,_=g.setTabGroupChoices,y=(0,l.useState)(h),T=y[0],N=y[1],E=[],R=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=k[m];null!=C&&C!==T&&x.some((function(e){return e.value===C}))&&N(C)}var I=function(e){var t=e.currentTarget,a=E.indexOf(t),n=x[a].value;n!==T&&(R(t),N(n),null!=m&&_(m,n))},A=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=E.indexOf(e.currentTarget)+1;a=E[n]||E[0];break;case"ArrowLeft":var l=E.indexOf(e.currentTarget)-1;a=E[l]||E[E.length-1]}null==(t=a)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},f)},x.map((function(e){var t=e.value,a=e.label,r=e.attributes;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return E.push(e)},onKeyDown:A,onFocus:I,onClick:I},r,{className:(0,o.Z)("tabs__item",s,null==r?void 0:r.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),d?(0,l.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,r.Z)();return l.createElement(d,(0,n.Z)({key:String(t)},e))}},3153:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>c,default:()=>b,frontMatter:()=>p,metadata:()=>m,toc:()=>v});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=a(4757),o=a(9877),s=a(8215),d=a(7859),u=["components"],p={id:"text",title:"Text Field Value",sidebar_label:"Text"},c=void 0,m={unversionedId:"api/resource/field-value/text",id:"api/resource/field-value/text",title:"Text Field Value",description:"A text field value consists of its value property of type string. The value is plaintext if the type of its corresponding field is singletext and rich-text (HTML) if the field's type is multitext.",source:"@site/docs/api/resource/field-value/text.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/text",permalink:"/docs/api/resource/field-value/text",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/text.md",tags:[],version:"current",frontMatter:{id:"text",title:"Text Field Value",sidebar_label:"Text"},sidebar:"mainSidebar",previous:{title:"General",permalink:"/docs/api/resource/field-value/general"},next:{title:"Status",permalink:"/docs/api/resource/field-value/status"}},f={},v=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],x={toc:v};function b(e){var t=e.components,a=(0,l.Z)(e,u);return(0,r.kt)("wrapper",(0,n.Z)({},x,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A text field value consists of its ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),". The value is plaintext if the type of its corresponding field is ",(0,r.kt)("inlineCode",{parentName:"p"},"single_text")," and rich-text (HTML) if the field's type is ",(0,r.kt)("inlineCode",{parentName:"p"},"multi_text"),"."),(0,r.kt)("h2",{id:"record-creation"},"Record creation"),(0,r.kt)(i.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,'A text field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "First Name" field with ID 1, type ',(0,r.kt)("inlineCode",{parentName:"p"},"single_text")," and external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"first_name"),' and a value for the "Notes" field with ID 2, type ',(0,r.kt)("inlineCode",{parentName:"p"},"multi_text")," and external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"notes"),":"),(0,r.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "first_name": "Adam Smith",\n      "notes": "<p>Registered <b>10</b> month ago.</p>"\n    }\n  }\' \n')),(0,r.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "first_name": "Adam Smith",\n    "notes": "<p>Registered <b>10</b> month ago.</p>"\n  }\n}\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Adam Smith",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "single_text",\n      "label": "First Name",\n      "values": [{ "value": "Adam Smith" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "multi_text",\n      "label": "Notes",\n      "values": [{ "value": "<p>Registered <b>10</b> month ago.</p>" }]\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,r.kt)(i.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,"A text field value can be retrieved as part of a record retrieval:"),(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Adam Smith",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "single_text",\n      "label": "First Name",\n      "values": [{ "value": "Adam Smith" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "multi_text",\n      "label": "Notes",\n      "values": [{ "value": "<p>Registered <b>10</b> month ago.</p>" }]\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"record-update"},"Record update"),(0,r.kt)(i.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,'One or more text field values can be updated as part of a record update. Here is an example request body for updating a record with a value for the "First Name" field with ID 1, type ',(0,r.kt)("inlineCode",{parentName:"p"},"single_text")," and external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"first_name"),' and a value for the "Notes" field with ID 2, type ',(0,r.kt)("inlineCode",{parentName:"p"},"multi_text")," and external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"notes"),":"),(0,r.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "first_name": "Andrea Lim",\n      "notes": "<p>Has <b>not</b> registered yet.</p>"\n    }\n  }\' \n')),(0,r.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "first_name": "Andrea Lim",\n    "notes": "<p>Has <b>not</b> registered yet.</p>"\n  }\n}\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Andrea Lim",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "single_text",\n      "label": "First Name",\n      "values": [{ "value": "Andrea Lim" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "multi_text",\n      "label": "Notes",\n      "values": [{ "value": "<p>Has <b>not</b> registered yet.</p>" }]\n    }\n  ]\n}\n')))}b.isMDXComponent=!0}}]);