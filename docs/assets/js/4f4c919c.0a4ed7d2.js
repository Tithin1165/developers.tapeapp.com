"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[998],{4757:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294);function l(e){var a,t=e.method,l=e.url;switch(t){case"GET":a="#007959";break;case"POST":a="#0071BB";break;case"PUT":a="#DEA700";break;case"DELETE":a="#DF245E"}return n.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},n.createElement("span",{style:{backgroundColor:a,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},t.toUpperCase()),n.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},l))}},8215:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294);function l(e){var a=e.children,t=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:l},a)}},9877:(e,a,t)=>{t.d(a,{Z:()=>u});var n=t(7462),l=t(7294),r=t(2389),i=t(3725),o=t(6010);const s="tabItem_LplD";function d(e){var a,t,r,d=e.lazy,u=e.block,p=e.defaultValue,m=e.values,c=e.groupId,v=e.className,h=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:h.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),b=(0,i.lx)(f,(function(e,a){return e.value===a.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(a=null!=p?p:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(r=h[0])?void 0:r.props.value;if(null!==k&&!f.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,i.UB)(),g=y.tabGroupChoices,T=y.setTabGroupChoices,x=(0,l.useState)(k),_=x[0],w=x[1],E=[],N=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var C=g[c];null!=C&&C!==_&&f.some((function(e){return e.value===C}))&&w(C)}var R=function(e){var a=e.currentTarget,t=E.indexOf(a),n=f[t].value;n!==_&&(N(a),w(n),null!=c&&T(c,n))},j=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=E.indexOf(e.currentTarget)+1;t=E[n]||E[0];break;case"ArrowLeft":var l=E.indexOf(e.currentTarget)-1;t=E[l]||E[E.length-1]}null==(a=t)||a.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},v)},f.map((function(e){var a=e.value,t=e.label,r=e.attributes;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:_===a?0:-1,"aria-selected":_===a,key:a,ref:function(e){return E.push(e)},onKeyDown:j,onFocus:R,onClick:R},r,{className:(0,o.Z)("tabs__item",s,null==r?void 0:r.className,{"tabs__item--active":_===a})}),null!=t?t:a)}))),d?(0,l.cloneElement)(h.filter((function(e){return e.props.value===_}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},h.map((function(e,a){return(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==_})}))))}function u(e){var a=(0,r.Z)();return l.createElement(d,(0,n.Z)({key:String(a)},e))}},4688:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>v,contentTitle:()=>m,default:()=>b,frontMatter:()=>p,metadata:()=>c,toc:()=>h});var n=t(7462),l=t(3366),r=(t(7294),t(3905)),i=t(4757),o=t(9877),s=t(8215),d=t(7859),u=["components"],p={id:"email",title:"Email Field Value",sidebar_label:"Email"},m=void 0,c={unversionedId:"api/resource/field-value/email",id:"api/resource/field-value/email",title:"Email Field Value",description:"An email field value consists of its value property which holds one or multiple email address entries. An entry contains the email address itself, plus its type, e.g. work or home. Currently the following values are allowed as type: work, home and other. If no type is provided, email address entries always default to work.",source:"@site/docs/api/resource/field-value/email.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/email",permalink:"/docs/api/resource/field-value/email",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/email.md",tags:[],version:"current",frontMatter:{id:"email",title:"Email Field Value",sidebar_label:"Email"},sidebar:"mainSidebar",previous:{title:"Calculation",permalink:"/docs/api/resource/field-value/calculation"},next:{title:"Phone",permalink:"/docs/api/resource/field-value/phone"}},v={},h=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],f={toc:h};function b(e){var a=e.components,t=(0,l.Z)(e,u);return(0,r.kt)("wrapper",(0,n.Z)({},f,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An email field value consists of its ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property which holds one or multiple email address entries. An entry contains the email address itself, plus its type, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"work")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"home"),". Currently the following values are allowed as type: ",(0,r.kt)("inlineCode",{parentName:"p"},"work"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"home")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"other"),". If no type is provided, email address entries always default to ",(0,r.kt)("inlineCode",{parentName:"p"},"work"),"."),(0,r.kt)("h2",{id:"record-creation"},"Record creation"),(0,r.kt)(i.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,"An email field value can be created as part of a record creation. It is possible to provide either a string, an object following the email address entry structure or an array of those two. It is advised to use an array of objects for the best accuracy of the provided data."),(0,r.kt)("p",null,'Here is an example request body for creating a record with a value for the "Customer email" field with ID 2, type ',(0,r.kt)("inlineCode",{parentName:"p"},"multi_email")," and external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"customer_email")," :"),(0,r.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "customer_email": \n        [\n          {"type": "work", "email": "johndoe@samplebusiness.com"},\n          {"type": "home", "email": "john@doe.com"}\n        ]\n    }\n  }\' \n')),(0,r.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "customer_email": [\n      { "type": "work", "email": "johndoe@samplebusiness.com" },\n      { "type": "home", "email": "john@doe.com" }\n    ]\n  }\n}\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Tape Technologies GmbH",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "customer_email",\n      "label": "Customer email",\n      "type": "email",\n      "field_type": "multi_email",\n      "values": [\n        {\n          "id": 100,\n          "value": "johndoe@samplebusiness.com",\n          "type": "work"\n        },\n        {\n          "id": 101,\n          "value": "john@doe.com",\n          "type": "home"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"Note that the individual email address entries contain an ID. Be sure to include them in updates, to keep existing email entries. If you omit the ID, new entries will be created instead and the respective existing ones will be removed."),(0,r.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,r.kt)(i.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,"An email field value can be retrieved as part of a record retrieval:"),(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Tape Technologies GmbH",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "customer_email",\n      "label": "Customer email",\n      "type": "email",\n      "field_type": "multi_email",\n      "values": [\n        {\n          "id": 100,\n          "value": "johndoe@samplebusiness.com",\n          "type": "work"\n        },\n        {\n          "id": 101,\n          "value": "john@doe.com",\n          "type": "home"\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"record-update"},"Record update"),(0,r.kt)(i.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,r.kt)("p",null,"One or more email field values can be updated as part of a record update, and individual entries can be updated via their ID. Here is an example request body for updating the email entries of an email field with external ID ",(0,r.kt)("inlineCode",{parentName:"p"},"customer_email")," of a record:"),(0,r.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)(d.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "customer_email": \n      [\n        { "id": 100, "type": "work", "email": "johndoeNEW@samplebusiness.com" },\n        { "type": "other", "email": "johndoe@gmail.com" }\n      ]\n    }\n  }\' \n')),(0,r.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "customer_email": [\n      { "id": 100, "type": "work", "email": "johndoeNEW@samplebusiness.com" },\n      { "type": "other", "email": "johndoe@gmail.com" }\n    ]\n  }\n}\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Tape Technologies GmbH",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "customer_email",\n      "label": "Customer email",\n      "type": "email",\n      "field_type": "multi_email",\n      "values": [\n        {\n          "id": 100,\n          "value": "johndoeNEW@samplebusiness.com",\n          "type": "work"\n        },\n        {\n          "id": 102,\n          "value": "johndoe@gmail.com",\n          "type": "other"\n        }\n      ]\n    }\n  ]\n}\n')))}b.isMDXComponent=!0}}]);