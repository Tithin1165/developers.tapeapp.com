"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[402],{7859:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(2263),a=n(1483),i=n(1736),l=n(6010),o=n(7294);const u="codeBlock_FKPJ";function s(e){var t=e.children,n=e.language,s=e.title,d=(0,o.useState)((0,a.W5)()),c=d[0],p=d[1];(0,o.useEffect)((0,a.kw)((0,r.Z)(),p),[]);var f=(0,a.hd)(c),m=(0,a.jM)(c),v=(0,a.dz)(c),h=(0,a.xe)(c);function g(e){return(e||"").replace(new RegExp("#USER_API_KEY","g"),f).replace(new RegExp("#BASE_URL","g"),h).replace(new RegExp("#RECORD_ID","g"),m).replace(new RegExp("#RECORD_TITLE","g"),v)}var x=("string"==typeof t?[t]:Array.isArray(t)?t:[]).map((function(e){return"string"==typeof e?g(e):e})),b=g(s);return o.createElement("div",{className:(0,l.Z)(u)},o.createElement(i.Z,{title:b,language:n},x))}},4757:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);function a(e){var t,n=e.method,a=e.url;switch(n){case"GET":t="#007959";break;case"POST":t="#0071BB";break;case"PUT":t="#DEA700";break;case"DELETE":t="#DF245E"}return r.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},r.createElement("span",{style:{backgroundColor:t,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},n.toUpperCase()),r.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},a))}},1483:(e,t,n)=>{n.d(t,{hd:()=>N,M:()=>E,hU:()=>I,S$:()=>R,W5:()=>l,jM:()=>C,dz:()=>U,xe:()=>k,kw:()=>D});var r,a,i=(r=[],a={initializing:!1,runtime:"PRD",activeUserContext:void 0,activeUserContextIsLoading:!0,demoRecord:void 0,demoRecordIsLoading:!0},{get:function(){return a},set:function(e){a!==e&&(a=e,r.forEach((function(e){return e(a)})))},subscribe:function(e){return r.push(e),function(){return function(e){r=r.filter((function(t){return t!==e}))}(e)}}});function l(){return i.get()}function o(e){i.set(e)}var u=n(5861),s=n(7757),d=n.n(s);function c(e){return"DEV"===e?"http://localhost:3000":"https://tapeapp.com"}var p=JSON.stringify({operationName:null,variables:{},query:"{\n  getActiveUserDevPortalContext {\n    ... on ActiveUserDevPortalContextDto {\n      userId\n      apiKey\n      user {\n        id\n        primaryName\n      }\n    }\n  }\n}\n"}),f=JSON.stringify({operationName:null,variables:{},query:"{\n      getUserSessions {\n        active\n        userId\n      }\n    }\n"});function m(e,t){return fetch(e+"/graphql/getActiveUserDevPortalContext",{method:"POST",headers:{"content-type":"application/json",uid:t},credentials:"include",mode:"cors",body:p}).then((function(e){return e.text()})).then((function(e){var t,n=JSON.parse(e);return(null==n||null==(t=n.data)?void 0:t.getActiveUserDevPortalContext)||{}}))}function v(e){return fetch(e+"/graphql/getUserSessions",{method:"POST",headers:{"content-type":"application/json"},credentials:"include",mode:"cors",body:f}).then((function(e){return e.text()})).then((function(e){var t,n=JSON.parse(e);return(null==n||null==(t=n.data)?void 0:t.getUserSessions)||[]}))}function h(e){return g.apply(this,arguments)}function g(){return(g=(0,u.Z)(d().mark((function e(t){var n,r,a,i;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,v(t);case 2:if(n=e.sent,(r=n.filter((function(e){return e.active}))).length){e.next=6;break}return e.abrupt("return",{});case 6:return a=r[0].userId,e.next=9,m(t,a);case 9:return i=e.sent,e.abrupt("return",i);case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var x=JSON.stringify({operationName:null,variables:{},query:"{\n  getActiveUserDevPortalDemoBlabItem {\n    id\n    title\n  }\n}"});function b(e,t){return fetch(e+"/graphql/getActiveUserDevPortalDemoRecord",{method:"POST",headers:{"content-type":"application/json",uid:t},credentials:"include",mode:"cors",body:x}).then((function(e){return e.text()})).then((function(e){var t,n=JSON.parse(e);return(null==n||null==(t=n.data)?void 0:t.getActiveUserDevPortalDemoBlabItem)||{}}))}function T(){return(T=(0,u.Z)(d().mark((function e(t){var n,r,a,i,u;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!l().initializing){e.next=2;break}return e.abrupt("return");case 2:return o(Object.assign({},l(),{initializing:!0})),n=c(t),e.prev=4,e.next=7,h(n);case 7:if(a=e.sent,o(Object.assign({},l(),{activeUserContext:a,activeUserContextIsLoading:!1})),!(i=null==(r=a.user)?void 0:r.id)){e.next=15;break}return e.next=13,b(n,i);case 13:u=e.sent,o(Object.assign({},l(),{demoRecord:u,demoRecordIsLoading:!1}));case 15:e.next=21;break;case 17:e.prev=17,e.t0=e.catch(4),console.error(e.t0),o(Object.assign({},l(),{activeUserContextIsLoading:!1,demoRecordIsLoading:!1}));case 21:case"end":return e.stop()}}),e,null,[[4,17]])})))).apply(this,arguments)}function y(e){return e.runtime}function k(e){return function(e){return"DEV"===e?"http://localhost:3000":"https://api.tapeapp.com"}(y(e))}function _(e){var t;return null!=(t=e.activeUserContext)?t:{}}function E(e){return e.activeUserContextIsLoading}function N(e){var t;return null!=(t=function(e){return _(e).apiKey}(e))?t:"user_key_replace_with_your_api_key"}function I(e){var t;return null==(t=_(e).user)?void 0:t.primaryName}function R(e){var t;return null!=(t=I(e))?t:"Developer"}function S(e){var t;return null!=(t=e.demoRecord)?t:{}}function C(e){var t;return null!=(t=function(e){return S(e).id}(e))?t:123}function U(e){var t;return null!=(t=function(e){return S(e).title}(e))?t:"Demo Record"}function D(e,t){var n,r,a=((null==e||null==(n=e.siteConfig)||null==(r=n.customFields)?void 0:r.runtime)||"PRD").trim().toUpperCase();return y(l())!==a&&o(Object.assign({},l(),{runtime:a})),function(e){T.apply(this,arguments)}(a),function(){return function(e){return i.subscribe(e)}(t)}}},8215:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);function a(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(7462),a=n(7294),i=n(2389),l=n(3725),o=n(6010);const u="tabItem_LplD";function s(e){var t,n,i,s=e.lazy,d=e.block,c=e.defaultValue,p=e.values,f=e.groupId,m=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var x=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=v[0])?void 0:i.props.value;if(null!==x&&!h.some((function(e){return e.value===x})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+x+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),T=b.tabGroupChoices,y=b.setTabGroupChoices,k=(0,a.useState)(x),_=k[0],E=k[1],N=[],I=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var R=T[f];null!=R&&R!==_&&h.some((function(e){return e.value===R}))&&E(R)}var S=function(e){var t=e.currentTarget,n=N.indexOf(t),r=h[n].value;r!==_&&(I(t),E(r),null!=f&&y(f,r))},C=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;n=N[r]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;n=N[a]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},m)},h.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:_===t?0:-1,"aria-selected":_===t,key:t,ref:function(e){return N.push(e)},onKeyDown:C,onFocus:S,onClick:S},i,{className:(0,o.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":_===t})}),null!=n?n:t)}))),s?(0,a.cloneElement)(v.filter((function(e){return e.props.value===_}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==_})}))))}function d(e){var t=(0,i.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},3153:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>c,metadata:()=>f,toc:()=>v});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=n(4757),o=n(9877),u=n(8215),s=n(7859),d=["components"],c={id:"text",title:"Text Field Value",sidebar_label:"Text"},p=void 0,f={unversionedId:"api/resource/field-value/text",id:"api/resource/field-value/text",title:"Text Field Value",description:"A text field value consists of its value property of type string. The value is plaintext if the type of its corresponding field is SINGLETEXT and rich-text (HTML) if the field's type is MULTITEXT.",source:"@site/docs/api/resource/field-value/text.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/text",permalink:"/docs/api/resource/field-value/text",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/text.md",tags:[],version:"current",frontMatter:{id:"text",title:"Text Field Value",sidebar_label:"Text"},sidebar:"mainSidebar",previous:{title:"General",permalink:"/docs/api/resource/field-value/general"},next:{title:"Status",permalink:"/docs/api/resource/field-value/status"}},m={},v=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],h={toc:v};function g(e){var t=e.components,n=(0,a.Z)(e,d);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A text field value consists of its ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," property of type ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),". The value is plaintext if the type of its corresponding field is ",(0,i.kt)("inlineCode",{parentName:"p"},"SINGLE_TEXT")," and rich-text (HTML) if the field's type is ",(0,i.kt)("inlineCode",{parentName:"p"},"MULTI_TEXT"),"."),(0,i.kt)("h2",{id:"record-creation"},"Record creation"),(0,i.kt)(l.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,i.kt)("p",null,'A text field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "First Name" field with ID 1, type ',(0,i.kt)("inlineCode",{parentName:"p"},"SINGLE_TEXT")," and external ID ",(0,i.kt)("inlineCode",{parentName:"p"},"first_name"),' and a value for the "Notes" field with ID 2, type ',(0,i.kt)("inlineCode",{parentName:"p"},"MULTI_TEXT")," and external ID ",(0,i.kt)("inlineCode",{parentName:"p"},"notes"),":"),(0,i.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "first_name": "Adam Smith",\n      "notes": "<p>Registered <b>10</b> month ago.</p>"\n    }\n  }\' \n')),(0,i.kt)(u.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "first_name": "Adam Smith",\n    "notes": "<p>Registered <b>10</b> month ago.</p>"\n  }\n}\n')))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Adam Smith",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "SINGLE_TEXT",\n      "label": "First Name",\n      "values": [{ "value": "Adam Smith" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "MULTI_TEXT",\n      "label": "Notes",\n      "values": [{ "value": "<p>Registered <b>10</b> month ago.</p>" }]\n    }\n  ]\n}\n')),(0,i.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,i.kt)(l.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,i.kt)("p",null,"A text field value can be retrieved as part of a record retrieval:"),(0,i.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Adam Smith",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "SINGLE_TEXT",\n      "label": "First Name",\n      "values": [{ "value": "Adam Smith" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "MULTI_TEXT",\n      "label": "Notes",\n      "values": [{ "value": "<p>Registered <b>10</b> month ago.</p>" }]\n    }\n  ]\n}\n')),(0,i.kt)("h2",{id:"record-update"},"Record update"),(0,i.kt)(l.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,i.kt)("p",null,'One or more text field values can be updated as part of a record update. Here is an example request body for updating a record with a value for the "First Name" field with ID 1, type ',(0,i.kt)("inlineCode",{parentName:"p"},"SINGLE_TEXT")," and external ID ",(0,i.kt)("inlineCode",{parentName:"p"},"first_name"),' and a value for the "Notes" field with ID 2, type ',(0,i.kt)("inlineCode",{parentName:"p"},"MULTI_TEXT")," and external ID ",(0,i.kt)("inlineCode",{parentName:"p"},"notes"),":"),(0,i.kt)(o.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "first_name": "Andrea Lim",\n      "notes": "<p>Has <b>not</b> registered yet.</p>"\n    }\n  }\' \n')),(0,i.kt)(u.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "first_name": "Andrea Lim",\n    "notes": "<p>Has <b>not</b> registered yet.</p>"\n  }\n}\n')))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Andrea Lim",\n  "fields": [\n    {\n      "field_Id": 1,\n      "external_id": "first_name",\n      "type": "text",\n      "field_type": "SINGLE_TEXT",\n      "label": "First Name",\n      "values": [{ "value": "Andrea Lim" }]\n    },\n    {\n      "field_Id": 2,\n      "external_id": "notes",\n      "type": "text",\n      "field_type": "MULTI_TEXT",\n      "label": "Notes",\n      "values": [{ "value": "<p>Has <b>not</b> registered yet.</p>" }]\n    }\n  ]\n}\n')))}g.isMDXComponent=!0}}]);