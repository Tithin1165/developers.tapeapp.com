"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[906],{7859:(e,n,a)=>{a.d(n,{Z:()=>s});var r=a(2263),t=a(2792),l=a(1736),i=a(6010),u=a(7294);const o="codeBlock_FKPJ";function s(e){var n=e.children,a=e.language,s=e.title,d=(0,u.useState)((0,t.W5)()),p=d[0],c=d[1];(0,u.useEffect)((0,t.kw)((0,r.Z)(),c),[]);var m=(0,t.hd)(p),v=(0,t.jM)(p),f=(0,t.dz)(p),g=(0,t.xe)(p);function _(e){return(e||"").replace(new RegExp("#USER_API_KEY","g"),m).replace(new RegExp("#BASE_URL","g"),g).replace(new RegExp("#RECORD_ID","g"),v).replace(new RegExp("#RECORD_TITLE","g"),f)}var b=("string"==typeof n?[n]:Array.isArray(n)?n:[]).map((function(e){return"string"==typeof e?_(e):e})),y=_(s);return u.createElement("div",{className:(0,i.Z)(o)},u.createElement(l.Z,{title:y,language:a},b))}},4757:(e,n,a)=>{a.d(n,{Z:()=>t});var r=a(7294);function t(e){var n,a=e.method,t=e.url;switch(a){case"GET":n="#007959";break;case"POST":n="#0071BB";break;case"PUT":n="#DEA700";break;case"DELETE":n="#DF245E"}return r.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},r.createElement("span",{style:{backgroundColor:n,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},a.toUpperCase()),r.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},t))}},8215:(e,n,a)=>{a.d(n,{Z:()=>t});var r=a(7294);function t(e){var n=e.children,a=e.hidden,t=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:t},n)}},9877:(e,n,a)=>{a.d(n,{Z:()=>d});var r=a(7462),t=a(7294),l=a(2389),i=a(3725),u=a(6010);const o="tabItem_LplD";function s(e){var n,a,l,s=e.lazy,d=e.block,p=e.defaultValue,c=e.values,m=e.groupId,v=e.className,f=t.Children.map(e.children,(function(e){if((0,t.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=c?c:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),_=(0,i.lx)(g,(function(e,n){return e.value===n.value}));if(_.length>0)throw new Error('Docusaurus error: Duplicate values "'+_.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(n=null!=p?p:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?n:null==(l=f[0])?void 0:l.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,i.UB)(),h=y.tabGroupChoices,k=y.setTabGroupChoices,x=(0,t.useState)(b),E=x[0],T=x[1],w=[],R=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var N=h[m];null!=N&&N!==E&&g.some((function(e){return e.value===N}))&&T(N)}var I=function(e){var n=e.currentTarget,a=w.indexOf(n),r=g[a].value;r!==E&&(R(n),T(r),null!=m&&k(m,r))},C=function(e){var n,a=null;switch(e.key){case"ArrowRight":var r=w.indexOf(e.currentTarget)+1;a=w[r]||w[0];break;case"ArrowLeft":var t=w.indexOf(e.currentTarget)-1;a=w[t]||w[w.length-1]}null==(n=a)||n.focus()};return t.createElement("div",{className:"tabs-container"},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":d},v)},g.map((function(e){var n=e.value,a=e.label,l=e.attributes;return t.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,key:n,ref:function(e){return w.push(e)},onKeyDown:C,onFocus:I,onClick:I},l,{className:(0,u.Z)("tabs__item",o,null==l?void 0:l.className,{"tabs__item--active":E===n})}),null!=a?a:n)}))),s?(0,t.cloneElement)(f.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):t.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function d(e){var n=(0,l.Z)();return t.createElement(s,(0,r.Z)({key:String(n)},e))}},7681:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>v,contentTitle:()=>c,default:()=>_,frontMatter:()=>p,metadata:()=>m,toc:()=>f});var r=a(7462),t=a(3366),l=(a(7294),a(3905)),i=a(4757),u=a(9877),o=a(8215),s=a(7859),d=["components"],p={id:"user",title:"User Field Value",sidebar_label:"User"},c=void 0,m={unversionedId:"api/resource/field-value/user",id:"api/resource/field-value/user",title:"User Field Value",description:"A user field value consists of its value property which holds a reference to a user. A user has the properties userid (unique ID), name (the username), orgId (ID of the user's organization) and others.",source:"@site/docs/api/resource/field-value/user.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/user",permalink:"/docs/api/resource/field-value/user",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/user.md",tags:[],version:"current",frontMatter:{id:"user",title:"User Field Value",sidebar_label:"User"},sidebar:"mainSidebar",previous:{title:"Status",permalink:"/docs/api/resource/field-value/status"},next:{title:"Category",permalink:"/docs/api/resource/field-value/category"}},v={},f=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],g={toc:f};function _(e){var n=e.components,a=(0,t.Z)(e,d);return(0,l.kt)("wrapper",(0,r.Z)({},g,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A user field value consists of its ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," property which holds a reference to a user. A user has the properties ",(0,l.kt)("inlineCode",{parentName:"p"},"user_id")," (unique ID), ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," (the username), ",(0,l.kt)("inlineCode",{parentName:"p"},"org_Id")," (ID of the user's organization) and others.\nA ",(0,l.kt)("inlineCode",{parentName:"p"},"single_user")," field value holds at most one user reference while a ",(0,l.kt)("inlineCode",{parentName:"p"},"multi_user")," field value can hold multiple user references."),(0,l.kt)("h2",{id:"record-creation"},"Record creation"),(0,l.kt)(i.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'A user field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "Supervisor" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"single_user")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"supervisor"),' and a value for the "Interviewed by" field with ID 3, type ',(0,l.kt)("inlineCode",{parentName:"p"},"multi_user")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"interviewed_by"),":"),(0,l.kt)(u.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "supervisor": 1,\n      "interviewed_by": [4, 5]\n    }\n  }\' \n')),(0,l.kt)(o.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "supervisor": 1,\n    "interviewed_by": [4, 5]\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Zoe Maxwell",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "supervisor",\n      "label": "Supervisor",\n      "type": "user",\n      "field_type": "single_user",\n      "values": [\n        {\n          "value": {\n            "user_id": 1,\n            "mail": ["zoe@tapeapp.com"],\n            "image": null,\n            "name": "Zoe Maxwell",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    },\n    {\n      "field_id": 3,\n      "external_id": "interviewed_by",\n      "label": "Interviewed by",\n      "field_type": "multi_user",\n      "type": "user",\n      "values": [\n        {\n          "value": {\n            "user_id": 4,\n            "mail": ["dan@tapeapp.com"],\n            "image": null,\n            "name": "Dan Jacob",\n            "org_id": 1,\n            "type": "user"\n          }\n        },\n        {\n          "value": {\n            "user_id": 5,\n            "mail": ["sierra@tapeapp.com"],\n            "image": null,\n            "name": "Sierra Johns",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,l.kt)(i.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"A user field value can be retrieved as part of a record retrieval:"),(0,l.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Zoe Maxwell",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "supervisor",\n      "label": "Supervisor",\n      "type": "user",\n      "field_type": "single_user",\n      "values": [\n        {\n          "value": {\n            "user_id": 1,\n            "mail": ["zoe@tapeapp.com"],\n            "image": null,\n            "name": "Zoe Maxwell",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    },\n    {\n      "field_id": 3,\n      "external_id": "interviewed_by",\n      "label": "Interviewed by",\n      "field_type": "multi_user",\n      "type": "user",\n      "values": [\n        {\n          "value": {\n            "user_id": 4,\n            "mail": ["dan@tapeapp.com"],\n            "image": null,\n            "name": "Dan Jacob",\n            "org_id": 1,\n            "type": "user"\n          }\n        },\n        {\n          "value": {\n            "user_id": 5,\n            "mail": ["sierra@tapeapp.com"],\n            "image": null,\n            "name": "Sierra Johns",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-update"},"Record update"),(0,l.kt)(i.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"One or more user field values can be updated as part of a record update. Here is an example request body for updating multiple user field values of a record:"),(0,l.kt)(u.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(s.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "supervisor": 2,\n      "interviewed_by": [5]\n    }\n  }\' \n')),(0,l.kt)(o.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "supervisor": 2,\n    "interviewed_by": [5]\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Delaney Beatty",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "supervisor",\n      "label": "Supervisor",\n      "type": "user",\n      "field_type": "single_user",\n      "values": [\n        {\n          "value": {\n            "user_id": 2,\n            "mail": ["delaney@tapeapp.com"],\n            "image": null,\n            "name": "Delaney Beatty",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    },\n    {\n      "field_id": 3,\n      "external_id": "interviewed_by",\n      "label": "Interviewed by",\n      "field_type": "multi_user",\n      "type": "user",\n      "values": [\n        {\n          "value": {\n            "user_id": 5,\n            "mail": ["sierra@tapeapp.com"],\n            "image": null,\n            "name": "Sierra Johns",\n            "org_id": 1,\n            "type": "user"\n          }\n        }\n      ]\n    }\n  ]\n}\n')))}_.isMDXComponent=!0}}]);