"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[9100],{7859:(e,a,n)=>{n.d(a,{Z:()=>c});var t=n(2263),r=n(2792),l=n(1736),o=n(6010),i=n(7294);const s="codeBlock_FKPJ";function c(e){var a=e.children,n=e.language,c=e.title,d=(0,i.useState)((0,r.W5)()),u=d[0],p=d[1];(0,i.useEffect)((0,r.kw)((0,t.Z)(),p),[]);var m=(0,r.hd)(u),v=(0,r.jM)(u),f=(0,r.dz)(u),y=(0,r.xe)(u);function h(e){return(e||"").replace(new RegExp("#USER_API_KEY","g"),m).replace(new RegExp("#BASE_URL","g"),y).replace(new RegExp("#RECORD_ID","g"),v).replace(new RegExp("#RECORD_TITLE","g"),f)}var _=("string"==typeof a?[a]:Array.isArray(a)?a:[]).map((function(e){return"string"==typeof e?h(e):e})),g=h(c);return i.createElement("div",{className:(0,o.Z)(s)},i.createElement(l.Z,{title:g,language:n},_))}},4757:(e,a,n)=>{n.d(a,{Z:()=>r});var t=n(7294);function r(e){var a,n=e.method,r=e.url;switch(n){case"GET":a="#007959";break;case"POST":a="#0071BB";break;case"PUT":a="#DEA700";break;case"DELETE":a="#DF245E"}return t.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},t.createElement("span",{style:{backgroundColor:a,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},n.toUpperCase()),t.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},r))}},8215:(e,a,n)=>{n.d(a,{Z:()=>r});var t=n(7294);function r(e){var a=e.children,n=e.hidden,r=e.className;return t.createElement("div",{role:"tabpanel",hidden:n,className:r},a)}},9877:(e,a,n)=>{n.d(a,{Z:()=>d});var t=n(7462),r=n(7294),l=n(2389),o=n(3725),i=n(6010);const s="tabItem_LplD";function c(e){var a,n,l,c=e.lazy,d=e.block,u=e.defaultValue,p=e.values,m=e.groupId,v=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=p?p:f.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),h=(0,o.lx)(y,(function(e,a){return e.value===a.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var _=null===u?u:null!=(a=null!=u?u:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?a:null==(l=f[0])?void 0:l.props.value;if(null!==_&&!y.some((function(e){return e.value===_})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+_+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,o.UB)(),b=g.tabGroupChoices,k=g.setTabGroupChoices,E=(0,r.useState)(_),x=E[0],T=E[1],R=[],C=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var N=b[m];null!=N&&N!==x&&y.some((function(e){return e.value===N}))&&T(N)}var H=function(e){var a=e.currentTarget,n=R.indexOf(a),t=y[n].value;t!==x&&(C(a),T(t),null!=m&&k(m,t))},Z=function(e){var a,n=null;switch(e.key){case"ArrowRight":var t=R.indexOf(e.currentTarget)+1;n=R[t]||R[0];break;case"ArrowLeft":var r=R.indexOf(e.currentTarget)-1;n=R[r]||R[R.length-1]}null==(a=n)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},v)},y.map((function(e){var a=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:x===a?0:-1,"aria-selected":x===a,key:a,ref:function(e){return R.push(e)},onKeyDown:Z,onFocus:H,onClick:H},l,{className:(0,i.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":x===a})}),null!=n?n:a)}))),c?(0,r.cloneElement)(f.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,a){return(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==x})}))))}function d(e){var a=(0,l.Z)();return r.createElement(c,(0,t.Z)({key:String(a)},e))}},8612:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>v,contentTitle:()=>p,default:()=>h,frontMatter:()=>u,metadata:()=>m,toc:()=>f});var t=n(7462),r=n(3366),l=(n(7294),n(3905)),o=n(4757),i=n(9877),s=n(8215),c=n(7859),d=["components"],u={id:"location",title:"Location Field Value",sidebar_label:"Location"},p=void 0,m={unversionedId:"api/resource/field-value/location",id:"api/resource/field-value/location",title:"Location Field Value",description:"A location field value consists of its value property, an object containing the properties describe a location. The value is a geographic location. A location field value holds at most one location value.",source:"@site/docs/api/resource/field-value/location.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/location",permalink:"/docs/api/resource/field-value/location",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/location.md",tags:[],version:"current",frontMatter:{id:"location",title:"Location Field Value",sidebar_label:"Location"},sidebar:"mainSidebar",previous:{title:"Calculation",permalink:"/docs/api/resource/field-value/calculation"},next:{title:"Email",permalink:"/docs/api/resource/field-value/email"}},v={},f=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],y={toc:f};function h(e){var a=e.components,n=(0,r.Z)(e,d);return(0,l.kt)("wrapper",(0,t.Z)({},y,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A location field value consists of its ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," property, an object containing the properties describe a location. The value is a geographic location. A ",(0,l.kt)("inlineCode",{parentName:"p"},"location")," field value holds at most one location value."),(0,l.kt)("h2",{id:"record-creation"},"Record creation"),(0,l.kt)(o.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'A location field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "Company Address" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"location")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"company_address"),":"),(0,l.kt)(i.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(c.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "company_address": {\n        "city": "Munich",\n        "country": "Germany",\n        "value": "Hessstr. 6, 80799 Munich, Germany",\n        "state": "Bavaria",\n        "postal_code": "80799",\n        "street_address": "Hessstr. 6"\n      }\n    }\n  }\' \n')),(0,l.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "company_address": {\n      "city": "Munich",\n      "map_in_sync": true,\n      "country": "Germany",\n      "value": "Hessstr. 6, 80799 Munich, Germany",\n      "state": "Bavaria",\n      "postal_code": "80799",\n      "street_address": "Hessstr. 6"\n    }\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Hessstr. 6, 80799 Munich, Germany",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "company_address",\n      "type": "location",\n      "field_type": "single_location",\n      "label": "Company Address",\n      "values": [\n        {\n          "city": "Munich",\n          "map_in_sync": true,\n          "country": "Germany",\n          "original_formatted_address": "Hessstr. 6, 80799 Munich, Germany",\n          "value": "Hessstr. 6, 80799 Munich, Germany",\n          "state": "Bavaria",\n          "postal_code": "80799",\n          "street_address": "Hessstr. 6"\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,l.kt)(o.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"A location field value can be retrieved as part of a record retrieval:"),(0,l.kt)(c.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Hessstr. 6, 80799 Munich, Germany",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "company_address",\n      "type": "location",\n      "field_type": "single_location",\n      "label": "Company Address",\n      "values": [\n        {\n          "city": "Munich",\n          "map_in_sync": true,\n          "country": "Germany",\n          "original_formatted_address": "Hessstr. 6, 80799 Munich, Germany",\n          "value": "Hessstr. 6, 80799 Munich, Germany",\n          "state": "Bavaria",\n          "postal_code": "80799",\n          "street_address": "Hessstr. 6"\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-update"},"Record update"),(0,l.kt)(o.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'One or more location field values can be updated as part of a record update. Here is an example request body for updating a record with a value for the "Company Address" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"location")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"company_address"),":"),(0,l.kt)(i.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(c.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "company_address": {\n        "city": "Munich",\n        "country": "Germany",\n        "value": "Hessstr. 6, 80799 Munich, Germany",\n        "state": "Bavaria",\n        "postal_code": "80799",\n        "street_address": "Hessstr. 6"\n      }\n    }\n  }\' \n')),(0,l.kt)(s.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "company_address": {\n      "city": "Munich",\n      "map_in_sync": true,\n      "country": "Germany",\n      "value": "Hessstr. 6, 80799 Munich, Germany",\n      "state": "Bavaria",\n      "postal_code": "80799",\n      "street_address": "Hessstr. 6"\n    }\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Hessstr. 6, 80799 Munich, Germany",\n  "fields": [\n    {\n      "field_Id": 2,\n      "external_id": "company_address",\n      "type": "location",\n      "field_type": "single_location",\n      "label": "Company Address",\n      "values": [\n        {\n          "city": "Munich",\n          "map_in_sync": true,\n          "country": "Germany",\n          "original_formatted_address": "Hessstr. 6, 80799 Munich, Germany",\n          "value": "Hessstr. 6, 80799 Munich, Germany",\n          "state": "Bavaria",\n          "postal_code": "80799",\n          "street_address": "Hessstr. 6"\n        }\n      ]\n    }\n  ]\n}\n')))}h.isMDXComponent=!0}}]);