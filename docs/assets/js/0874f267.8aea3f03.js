"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[492],{7859:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(2263),r=a(2792),l=a(1736),o=a(6010),s=a(7294);const i="codeBlock_FKPJ";function u(e){var t=e.children,a=e.language,u=e.title,d=(0,s.useState)((0,r.W5)()),p=d[0],c=d[1];(0,s.useEffect)((0,r.kw)((0,n.Z)(),c),[]);var m=(0,r.hd)(p),v=(0,r.jM)(p),f=(0,r.dz)(p),b=(0,r.xe)(p);function h(e){return(e||"").replace(new RegExp("#USER_API_KEY","g"),m).replace(new RegExp("#BASE_URL","g"),b).replace(new RegExp("#RECORD_ID","g"),v).replace(new RegExp("#RECORD_TITLE","g"),f)}var g=("string"==typeof t?[t]:Array.isArray(t)?t:[]).map((function(e){return"string"==typeof e?h(e):e})),k=h(u);return s.createElement("div",{className:(0,o.Z)(i)},s.createElement(l.Z,{title:k,language:a},g))}},4757:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);function r(e){var t,a=e.method,r=e.url;switch(a){case"GET":t="#007959";break;case"POST":t="#0071BB";break;case"PUT":t="#DEA700";break;case"DELETE":t="#DF245E"}return n.createElement("div",{style:{display:"flex",flexDirection:"row",fontSize:"15px",lineHeight:"15px",marginBottom:"13px"}},n.createElement("span",{style:{backgroundColor:t,color:"var(--tape-color-lightest)",borderRadius:"999px",padding:"4px 9px 3px 9px",fontWeight:700,fontSize:"11px",lineHeight:"11px"}},a.toUpperCase()),n.createElement("span",{style:{color:"var(--tape-color-darker)",marginLeft:"9px",marginTop:"2px"}},r))}},8215:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),r=a(7294),l=a(2389),o=a(3725),s=a(6010);const i="tabItem_LplD";function u(e){var t,a,l,u=e.lazy,d=e.block,p=e.defaultValue,c=e.values,m=e.groupId,v=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=c?c:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,o.lx)(b,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===p?p:null!=(t=null!=p?p:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=f[0])?void 0:l.props.value;if(null!==g&&!b.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,o.UB)(),x=k.tabGroupChoices,_=k.setTabGroupChoices,E=(0,r.useState)(g),y=E[0],T=E[1],R=[],N=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var w=x[m];null!=w&&w!==y&&b.some((function(e){return e.value===w}))&&T(w)}var C=function(e){var t=e.currentTarget,a=R.indexOf(t),n=b[a].value;n!==y&&(N(t),T(n),null!=m&&_(m,n))},Z=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=R.indexOf(e.currentTarget)+1;a=R[n]||R[0];break;case"ArrowLeft":var r=R.indexOf(e.currentTarget)-1;a=R[r]||R[R.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},v)},b.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:function(e){return R.push(e)},onKeyDown:Z,onFocus:C,onClick:C},l,{className:(0,s.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":y===t})}),null!=a?a:t)}))),u?(0,r.cloneElement)(f.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}function d(e){var t=(0,l.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},7651:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>c,default:()=>h,frontMatter:()=>p,metadata:()=>m,toc:()=>f});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=a(4757),s=a(9877),i=a(8215),u=a(7859),d=["components"],p={id:"status",title:"Status Field Value",sidebar_label:"Status"},c=void 0,m={unversionedId:"api/resource/field-value/status",id:"api/resource/field-value/status",title:"Status Field Value",description:"A status field value consists of its value property which holds a reference to a status option. A status option has the properties id (unique ID), text (the label), color (hexcolor value) and means_completed (whether the status indicates completion). A status field value holds at most one status option.",source:"@site/docs/api/resource/field-value/status.md",sourceDirName:"api/resource/field-value",slug:"/api/resource/field-value/status",permalink:"/docs/api/resource/field-value/status",editUrl:"https://github.com/tape-dev/developers.tapeapp.com/edit/main/apps/dev-portal/docs/api/resource/field-value/status.md",tags:[],version:"current",frontMatter:{id:"status",title:"Status Field Value",sidebar_label:"Status"},sidebar:"mainSidebar",previous:{title:"Text",permalink:"/docs/api/resource/field-value/text"},next:{title:"User",permalink:"/docs/api/resource/field-value/user"}},v={},f=[{value:"Record creation",id:"record-creation",level:2},{value:"Record retrieval",id:"record-retrieval",level:2},{value:"Record update",id:"record-update",level:2}],b={toc:f};function h(e){var t=e.components,a=(0,r.Z)(e,d);return(0,l.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A status field value consists of its ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," property which holds a reference to a status option. A status option has the properties ",(0,l.kt)("inlineCode",{parentName:"p"},"id")," (unique ID), ",(0,l.kt)("inlineCode",{parentName:"p"},"text")," (the label), ",(0,l.kt)("inlineCode",{parentName:"p"},"color")," (hexcolor value) and ",(0,l.kt)("inlineCode",{parentName:"p"},"means_completed")," (whether the status indicates completion). A ",(0,l.kt)("inlineCode",{parentName:"p"},"status")," field value holds at most one status option."),(0,l.kt)("h2",{id:"record-creation"},"Record creation"),(0,l.kt)(o.Z,{method:"POST",url:"https://api.tapeapp.com/v1/record/app/{app_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,'A status field value can be created as part of a record creation. Here is an example request body for creating a record with a value for the "Onboarding status" field with ID 2, type ',(0,l.kt)("inlineCode",{parentName:"p"},"status")," and external ID ",(0,l.kt)("inlineCode",{parentName:"p"},"onboarding_status"),":"),(0,l.kt)(s.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(u.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X POST #BASE_URL/v1/record/app/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "onboarding_status": 1\n    }\n  }\' \n')),(0,l.kt)(i.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "onboarding_status": 1\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u2b05\ufe0f \xa0\xa0   Response"',title:'"\u2b05\ufe0f',"\xa0\xa0":!0,"":!0,'Response"':!0},'{\n  "record_id": 1,\n  "title": "Not started",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "onboarding_status",\n      "label": "Onboarding status",\n      "type": "status",\n      "field_type": "status",\n      "values": [\n        {\n          "value": {\n            "id": 1,\n            "text": "Not started",\n            "color": "DF245E",\n            "means_completed": false\n          }\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-retrieval"},"Record retrieval"),(0,l.kt)(o.Z,{method:"GET",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"A status field value can be retrieved as part of a record retrieval:"),(0,l.kt)(u.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},"curl #BASE_URL/v1/record/1 \\\n  -u #USER_API_KEY:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Not started",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "onboarding_status",\n      "label": "Onboarding status",\n      "type": "status",\n      "field_type": "status",\n      "values": [\n        {\n          "value": {\n            "id": 1,\n            "text": "Not started",\n            "color": "DF245E",\n            "means_completed": false\n          }\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h2",{id:"record-update"},"Record update"),(0,l.kt)(o.Z,{method:"PUT",url:"https://api.tapeapp.com/v1/record/{record_id}",mdxType:"EndpointBadge"}),(0,l.kt)("p",null,"One or more status field values can be updated as part of a record update. Here is an example request body for updating multiple status field values of a record:"),(0,l.kt)(s.Z,{defaultValue:"curl",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,l.kt)(u.Z,{language:"shell",title:"\u27a1\ufe0f \xa0\xa0   Request",mdxType:"ContextCodeBlock"},'curl -X PUT #BASE_URL/v1/record/1  \\\n  -u #USER_API_KEY: \\\n  -H "Content-Type: application/json" \\\n  --data \'{\n    "fields": {\n      "onboarding_status": 2\n    }\n  }\' \n')),(0,l.kt)(i.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u27a1\ufe0f \xa0\xa0   Request">',title:'"\u27a1\ufe0f',"\xa0\xa0":!0,"":!0,'Request">':!0},'{\n  "fields": {\n    "onboarding_status": 2\n  }\n}\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='\u2b05\ufe0f \xa0\xa0   Response'",title:"'\u2b05\ufe0f","\xa0\xa0":!0,"":!0,"Response'":!0},'{\n  "record_id": 1,\n  "title": "Done",\n  "fields": [\n    {\n      "field_id": 2,\n      "external_id": "onboarding_status",\n      "label": "Onboarding status",\n      "type": "status",\n      "field_type": "status",\n      "values": [\n        {\n          "value": {\n            "id": 2,\n            "text": "Done",\n            "color": "007959",\n            "means_completed": true\n          }\n        }\n      ]\n    }\n  ]\n}\n')))}h.isMDXComponent=!0}}]);